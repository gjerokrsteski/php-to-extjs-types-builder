{"name":"PHP ExtJS Types Builder","tagline":"Creates JSON suitable strings for the communication with your ExtJS-GUI","body":"PHP ExtJS Types Builder\r\n==========================\r\n\r\nThe ExtJS-Types-Builder is a OOP-PHP-Framework and creates JSON suitable strings for the communication\r\nwith your ExtJS-GUI. Due an fluent interface you can easily build and prepare the types.\r\n\r\n[![Build Status](https://secure.travis-ci.org/gjerokrsteski/php-to-extjs-types-builder.png?branch=master)](http://travis-ci.org/gjerokrsteski/php-to-extjs-types-builder)\r\n\r\n\r\nBuild a textfield\r\n-----------------\r\n```php\r\n$item = new ExtjsTypes_TextField('email', 'Ihre E-Mail:');\r\n\r\n$data = $item->setValue('meine-email@web.de')\r\n             ->setVtype(new ExtjsTypes_VTypes_Email())\r\n             ->prepare();\r\n\r\nprint_r(json_encode($data));\r\n```\r\n\r\nOutput will be:\r\n```cli\r\n{\r\n  \"xtype\": \"textfield\",\r\n  \"name\": \"email\",\r\n  \"fieldLabel\": \"Ihre E-Mail:\",\r\n  \"allowBlank\": false,\r\n  \"value\": \"meine-email@web.de\",\r\n  \"vtype\": \"email\"\r\n}\r\n```\r\n\r\nBuild a combobox (selectbox)\r\n----------------------------\r\n```php\r\n$comboBox = new ExtJsTypes_ComboBox('My friends as combo-box');\r\n$comboBox->setDisplayField('name')\r\n         ->setValueField('name-value')\r\n         ->addData('freunde', 'Miki')\r\n         ->addData('freunde', 'Joe')\r\n         ->addData('freunde2', 'Miki')\r\n         ->addData('freunde2', 'Joe');\r\n\r\n$data = $comboBox->prepare();\r\n\r\nprint_r(json_encode($data));\r\n```\r\n\r\nOutput will be:\r\n```cli\r\n{\r\n  \"xtype\": \"combo\",\r\n  \"mode\": \"static\",\r\n  \"editable\": false,\r\n  \"triggerAction\": \"all\",\r\n  \"fieldLabel\": \"My friends as combo-box\",\r\n  \"displayField\": \"name\",\r\n  \"valueField\": \"name-value\",\r\n  \"store\": [\r\n    [\r\n      \"freunde\",\r\n      \"Miki\"\r\n    ],\r\n    [\r\n      \"freunde\",\r\n      \"Joe\"\r\n    ],\r\n    [\r\n      \"freunde2\",\r\n      \"Miki\"\r\n    ],\r\n    [\r\n      \"freunde2\",\r\n      \"Joe\"\r\n    ]\r\n  ]\r\n}\r\n```\r\n\r\nBuild a form with textfield and combobox\r\n----------------------------------------\r\n```php\r\n$typeForm = new ExtJsTypes_Form(\r\n\t'Node deatails',\r\n\t'controller=extjstemplate&act=gettemplates'\r\n);\r\n\r\n$textFieldName = new ExtJsTypes_TextField('name', 'Ihr  Name');\r\n$textFieldEmail = new ExtJsTypes_TextField('email', 'Ihre  E-Mail');\r\n\r\n$comboBox = new ExtJsTypes_ComboBox('My friends as combo-box');\r\n$comboBox->setDisplayField('name')\r\n         ->setValueField('name-value')\r\n         ->addData('freunde', 'Miki')\r\n         ->addData('freunde', 'Joe');\r\n\r\n$data = $typeForm->addItem($textFieldName)\r\n                 ->addItem($textFieldEmail)\r\n                 ->addItem($comboBox)\r\n                 ->prepare();\r\n\r\nprint_r(json_encode($data));\r\n```\r\n\r\nOutput will be:\r\n```cli\r\n{\r\n  \"xtype\": \"form\",\r\n  \"config\": {\r\n    \"title\": \"Node deatails\",\r\n    \"url\": \"controller=extjstemplate&act=gettemplates\",\r\n    \"items\": [\r\n      {\r\n        \"xtype\": \"textfield\",\r\n        \"name\": \"name\",\r\n        \"fieldLabel\": \"Ihr  Name\",\r\n        \"allowBlank\": false\r\n      },\r\n      {\r\n        \"xtype\": \"textfield\",\r\n        \"name\": \"email\",\r\n        \"fieldLabel\": \"Ihre  E-Mail\",\r\n        \"allowBlank\": false\r\n      },\r\n      {\r\n        \"xtype\": \"combo\",\r\n        \"mode\": \"static\",\r\n        \"editable\": false,\r\n        \"triggerAction\": \"all\",\r\n        \"fieldLabel\": \"My friends as combo-box\",\r\n        \"displayField\": \"name\",\r\n        \"valueField\": \"name-value\",\r\n        \"store\": [\r\n          [\r\n            \"freunde\",\r\n            \"Miki\"\r\n          ],\r\n          [\r\n            \"freunde\",\r\n            \"Joe\"\r\n          ]\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\nBuild a grid\r\n------------\r\n```php\r\n$fields = new ExtJsTypes_Fields();\r\n$fields->add('name')\r\n       ->add('vorname')\r\n       ->add('email');\r\n\r\n$columns = new ExtJsTypes_Columns();\r\n$columns->add('Name', 'name')\r\n        ->add('Vorname', 'vorname')\r\n        ->add('E-Mail', 'email', true);\r\n\r\n$data = new ExtJsTypes_Data();\r\n$data->put(array('name' => 'Miki', 'email' => 'miki@maus.de'))\r\n     ->put(array('name' => 'Olie', 'email' => 'olie@maus.de'));\r\n\r\n$grid = new ExtJsTypes_Grid('My friends');\r\n$grid->setFields($fields)\r\n     ->setColumns($columns)\r\n     ->setData($data);\r\n\r\n$data = $grid->prepare();\r\n\r\nprint_r(json_encode($data));\r\n```\r\n\r\nOutput will be:\r\n```cli\r\n{\r\n  \"xtype\": \"gridpanel\",\r\n  \"config\": {\r\n    \"title\": \"My friends\",\r\n    \"fields\": [\r\n      \"name\",\r\n      \"email\"\r\n    ],\r\n    \"columns\": [\r\n      {\r\n        \"header\": \"Name\",\r\n        \"dataIndex\": \"name\",\r\n        \"flex\": false\r\n      },\r\n      {\r\n        \"header\": \"E-Mail\",\r\n        \"dataIndex\": \"email\",\r\n        \"flex\": true\r\n      }\r\n    ],\r\n    \"data\": [\r\n      {\r\n        \"name\": \"Miki\",\r\n        \"email\": \"miki@maus.de\"\r\n      },\r\n      {\r\n        \"name\": \"Olie\",\r\n        \"email\": \"olie@maus.de\"\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\nBuild a grid with docked textfield\r\n----------------------------------\r\n```php\r\n$fields = new ExtJsTypes_Fields();\r\n$fields->add('name')\r\n       ->add('vorname');\r\n\r\n$columns = new ExtJsTypes_Columns();\r\n$columns->add('Name', 'name')\r\n        ->add('Vorname', 'vorname', true);\r\n\r\n$data = new ExtJsTypes_Data();\r\n$data->put(array('name' => 'Miki', 'vorname' => 'Maus'))\r\n     ->put(array('name' => 'Olie', 'vorname' => 'Otto'));\r\n\r\n$grid = new ExtJsTypes_Grid('My friends');\r\n$grid->setFields($fields)\r\n     ->setColumns($columns)\r\n     ->setData($data)\r\n      ->dockItem(\r\n        new ExtJsTypes_ItemsDocker(\r\n          new ExtJsTypes_Textfield('new-scale', 'Add Scale')\r\n        )\r\n      );\r\n\r\n$data = $grid->prepare();\r\n\r\nprint_r(json_encode($data));\r\n```\r\n\r\nOutput will be:\r\n```cli\r\n{\r\n  \"xtype\": \"gridpanel\",\r\n  \"config\": {\r\n    \"title\": \"My friends\",\r\n    \"fields\": [\r\n      \"name\",\r\n      \"vorname\"\r\n    ],\r\n    \"columns\": [\r\n      {\r\n        \"header\": \"Name\",\r\n        \"dataIndex\": \"name\",\r\n        \"flex\": false\r\n      },\r\n      {\r\n        \"header\": \"Vorname\",\r\n        \"dataIndex\": \"vorname\",\r\n        \"flex\": true\r\n      }\r\n    ],\r\n    \"data\": [\r\n      {\r\n        \"name\": \"Miki\",\r\n        \"vorname\": \"Maus\"\r\n      },\r\n      {\r\n        \"name\": \"Olie\",\r\n        \"vorname\": \"Otto\"\r\n      }\r\n    ],\r\n    \"dockeditems\": [\r\n      {\r\n        \"xtype\": \"textfield\",\r\n        \"buttonLabel\": \"Add Scale\"\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}